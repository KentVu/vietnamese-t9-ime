#https://github.com/codecov/example-android/blob/master/.travis.yml
#https://guides.codepath.com/android/Setting-up-Travis-CI
#https://unicorn-utterances.com/posts/travis-ci-for-android/
env:
  global:
    - ANDROID_TARGET=android-22
    - ANDROID_ABI=armeabi-v7a
language: android
jdk:
  - oraclejdk8

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    # lookup below for default buildToolsVersion in accordance to AGP version
    # https://developer.android.com/studio/releases/gradle-plugin.html#3-4-0
    - build-tools-28.0.3

    # The SDK version used to compile your project
    - android-28
    - android-22

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    #- addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-22
    #- sys-img-armeabi-v7a-android-17
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

# ripped from https://github.com/googlesamples/android-ndk/blob/ae0bb4de/.travis.yml
#addons:
#  apt_packages:
#    - pandoc

# Emulator Management: Create, Start and Wait
before_script:
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &
  - adb shell input keyevent 82 &

script:
  - ./gradlew -Plint.output.console=true build connectedAndroidTest
  # print lint results details
  #- for f in app/build/reports/lint-results.html; do pandoc $f -t plain; done
  #- for f in app/build/reports/androidTests/connected/*.html; do pandoc $f -t plain; done

#before_install:
  # if [ `uname -m` = x86_64]; then
  #- wget https://dl.google.com/android/repository/android-ndk-r16-linux-x86_64.zip
  #- unzip -q android-ndk-r16-linux-x86_64.zip
  #- export ANDROID_NDK_HOME=`pwd`/android-ndk-r16
  #- mkdir -v $ANDROID_HOME/licenses && echo -ne "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_HOME/licenses/android-sdk-license && cat $ANDROID_HOME/licenses/android-sdk-license

deploy:
  skip_cleanup: true
  provider: bintray
  file: "bintray-descriptor.json"
  user: "kentvu"
  key:
    secure: "hpZPPt/ygLw6fLlkLq64/xQNWf23Z7QDcS+xKvDQ6qX+ULUyrpav4v37KLTRHgtwOcG3HOScOQwkAa06HRBsSlCnTfNKpxS9Vs4rZPdyZaxYanumXHdLc47wvNC2EpzN22S4Juv4rKAtONHgFbZzggmTC9oC3Cb3OAA/+sgF3IdhC7uO+cfCw7PBaD8ZUYupu/8uorOyZcDAFhxyyBxoGGKUAbqcgKVhSMS+XmoVhPAc6wAlRQWWzz09nUK4eAG2m7g+3V192zy6BZb4J1JIIAeiEL5UnmF72u4Ar7fm+E2Uc7kxFnUFISNYbKn5tkruiUgPCzOXPScLhB7T/O0r108VHq9zppJWT/5Husv3udRgoPoY54JFNZmmC2VDbnQiH+GUxYW64jS16vqDAFsicEMdugNd8pc+pPRyv3ZaXT0JhsS+LjhstJlyEb7im4dxwRrYkzh7AHJFtiq4wHwlKcZADpe9LUvpgFXLoDBAOFVnKg0C8UL13tjNiqJJN9zSlRsEd54HHzykr1TwC5l70GlTSSjzToPqDlpCdx+mtiVFyVLmTKPerGZqspVcyZ6i5PlHCEubgc00uVb1BnglfFeZZoUfNdM7WLby78F5HPTTlJTpllNuGDVXBggSot0jwXrCEH0vkrTMbGOBiiMnMxJ2SuJ+trWC6gG0DZe/SIs="

#  passphrase: "Optional. In case a passphrase is configured on Bintray and GPG signing is used"
#  dry-run: "Optional. If true, skips sending requests to Bintray. Useful for testing your configuration"
