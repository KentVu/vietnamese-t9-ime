apply plugin: 'java'
apply plugin: 'application'

repositories {
    // https://stackoverflow.com/a/44055976/1562087
    // no com.android.support:support-annotations in maven?!
    maven {
        url 'https://maven.google.com'
        // Alternative URL is 'https://dl.google.com/dl/android/maven2/'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.snappydb:snappydb-lib:0.5.2'
    compile 'com.esotericsoftware.kryo:kryo:2.24.0'
    compile 'com.android.support:support-annotations:25.3.1'
    //compile 'com.google.android:android:4.1.1.4'
//    testCompile 'junit:junit:4.12'
    //compile 'org.androidannotations:androidannotations-core:4.3.1'
    testCompile 'org.testng:testng:6.9.6'
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()
    // set a system property for the test JVM(s)
    systemProperty 'some.prop', 'value'

    // explicitly include or exclude tests
    //include 'org/foo/**'
    //exclude 'org/boo/**'

    // show standard out and standard error of the test JVM(s) on the console
//    testLogging.showStandardStreams = true

    // set heap size for the test JVM(s)
//    minHeapSize = "128m"
//    maxHeapSize = "512m"

    // set JVM arguments for the test JVM(s)
//    jvmArgs '-XX:MaxPermSize=256m'

    // listen to events in the test execution lifecycle
//    beforeTest { descriptor ->
//        logger.lifecycle("Running test: " + descriptor)
//    }

    // listen to standard out and standard error of the test JVM(s)
//    onOutput { descriptor, event ->
//        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
//    }
}

task copyResDirectoryToClasses(type: Copy){
    from "${projectDir}/src/main/resources/com/example"
    into "${buildDir}/classes/main/com/example"
}

testClasses.dependsOn(copyResDirectoryToClasses)

mainClassName = "com.example.GenerateDatabase"

sourceCompatibility = "1.7"
targetCompatibility = "1.7"
